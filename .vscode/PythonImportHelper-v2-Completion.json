[
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "threading",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "threading",
        "description": "threading",
        "detail": "threading",
        "documentation": {}
    },
    {
        "label": "qrcode",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "qrcode",
        "description": "qrcode",
        "detail": "qrcode",
        "documentation": {}
    },
    {
        "label": "BytesIO",
        "importPath": "io",
        "description": "io",
        "isExtraImport": true,
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "ContentFile",
        "importPath": "django.core.files.base",
        "description": "django.core.files.base",
        "isExtraImport": true,
        "detail": "django.core.files.base",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "django.utils.text",
        "description": "django.utils.text",
        "isExtraImport": true,
        "detail": "django.utils.text",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "core.migrations.0001_initial",
        "description": "core.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='qr_generator',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "core.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "core.migrations.0002_alter_qr_generator_options",
        "description": "core.migrations.0002_alter_qr_generator_options",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('core', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='qr_generator',\n            options={'verbose_name': 'QR CODE', 'verbose_name_plural': 'QR CODES'},\n        ),\n    ]",
        "detail": "core.migrations.0002_alter_qr_generator_options",
        "documentation": {}
    },
    {
        "label": "QRGeneratorAdmin",
        "kind": 6,
        "importPath": "core.admin",
        "description": "core.admin",
        "peekOfCode": "class QRGeneratorAdmin(admin.ModelAdmin):\n    list_display = ('name', 'generated_by', 'created_at', 'updated_at')\n    search_fields = ('name', 'generated_by__username')\n    list_filter = ('created_at', 'updated_at', 'generated_by')\n    readonly_fields = (\"generated_by\",)",
        "detail": "core.admin",
        "documentation": {}
    },
    {
        "label": "CoreConfig",
        "kind": 6,
        "importPath": "core.apps",
        "description": "core.apps",
        "peekOfCode": "class CoreConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'core'",
        "detail": "core.apps",
        "documentation": {}
    },
    {
        "label": "CurrentUserMiddleware",
        "kind": 6,
        "importPath": "core.middleware",
        "description": "core.middleware",
        "peekOfCode": "class CurrentUserMiddleware:\n    \"\"\"\n    Middleware to store the currently logged-in user in a thread-local variable.\n    \"\"\"\n    def __init__(self, get_response):\n        self.get_response = get_response\n    def __call__(self, request):\n        if hasattr(request, \"user\") and request.user.is_authenticated:\n            _user.value = request.user\n        else:",
        "detail": "core.middleware",
        "documentation": {}
    },
    {
        "label": "get_current_user",
        "kind": 2,
        "importPath": "core.middleware",
        "description": "core.middleware",
        "peekOfCode": "def get_current_user():\n    \"\"\"Helper function to get the stored user\"\"\"\n    return getattr(_user, \"value\", None)",
        "detail": "core.middleware",
        "documentation": {}
    },
    {
        "label": "_user",
        "kind": 5,
        "importPath": "core.middleware",
        "description": "core.middleware",
        "peekOfCode": "_user = threading.local()\nclass CurrentUserMiddleware:\n    \"\"\"\n    Middleware to store the currently logged-in user in a thread-local variable.\n    \"\"\"\n    def __init__(self, get_response):\n        self.get_response = get_response\n    def __call__(self, request):\n        if hasattr(request, \"user\") and request.user.is_authenticated:\n            _user.value = request.user",
        "detail": "core.middleware",
        "documentation": {}
    },
    {
        "label": "TimestampModel",
        "kind": 6,
        "importPath": "core.models",
        "description": "core.models",
        "peekOfCode": "class TimestampModel(models.Model):\n    \"\"\"\n    A base abstract model that provides timestamps.\n    \"\"\"\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    class Meta:\n        abstract = True\nclass qr_generator(TimestampModel):\n    \"\"\"",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "qr_generator",
        "kind": 6,
        "importPath": "core.models",
        "description": "core.models",
        "peekOfCode": "class qr_generator(TimestampModel):\n    \"\"\"\n    A model to store and generate QR codes.\n    \"\"\"\n    name = models.CharField(max_length=150)\n    url = models.URLField(max_length=2000)\n    qr_image = models.ImageField(upload_to='qr_codes/', blank=True, null=True)\n    generated_by = models.ForeignKey(User, blank=True, null=True, on_delete=models.SET_NULL, related_name=\"generated_by\")\n    class Meta:\n        verbose_name = \"QR CODE\"",
        "detail": "core.models",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "qr_generator.asgi",
        "description": "qr_generator.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "qr_generator.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "qr_generator.settings",
        "description": "qr_generator.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-r)s*hutbco(^y_8m@+ts!n6q1+w5kf$ex5mryncgg_8#qkgo4%'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "qr_generator.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "qr_generator.settings",
        "description": "qr_generator.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-r)s*hutbco(^y_8m@+ts!n6q1+w5kf$ex5mryncgg_8#qkgo4%'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "qr_generator.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "qr_generator.settings",
        "description": "qr_generator.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "qr_generator.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "qr_generator.settings",
        "description": "qr_generator.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "qr_generator.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "qr_generator.settings",
        "description": "qr_generator.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'jazzmin',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    # apps\n    'core'",
        "detail": "qr_generator.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "qr_generator.settings",
        "description": "qr_generator.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'core.middleware.CurrentUserMiddleware',\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]",
        "detail": "qr_generator.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "qr_generator.settings",
        "description": "qr_generator.settings",
        "peekOfCode": "ROOT_URLCONF = 'qr_generator.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "qr_generator.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "qr_generator.settings",
        "description": "qr_generator.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "qr_generator.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "qr_generator.settings",
        "description": "qr_generator.settings",
        "peekOfCode": "WSGI_APPLICATION = 'qr_generator.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/3.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "qr_generator.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "qr_generator.settings",
        "description": "qr_generator.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "qr_generator.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "qr_generator.settings",
        "description": "qr_generator.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "qr_generator.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "qr_generator.settings",
        "description": "qr_generator.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field",
        "detail": "qr_generator.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "qr_generator.settings",
        "description": "qr_generator.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "qr_generator.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "qr_generator.settings",
        "description": "qr_generator.settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nSTATIC_URL = '/static/'",
        "detail": "qr_generator.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "qr_generator.settings",
        "description": "qr_generator.settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = (",
        "detail": "qr_generator.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "qr_generator.settings",
        "description": "qr_generator.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = (\n    os.path.join(BASE_DIR, 'staticfiles/'),",
        "detail": "qr_generator.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "qr_generator.settings",
        "description": "qr_generator.settings",
        "peekOfCode": "STATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = (\n    os.path.join(BASE_DIR, 'staticfiles/'),\n)\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\nMEDIA_URL = '/media/'",
        "detail": "qr_generator.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "qr_generator.settings",
        "description": "qr_generator.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = (\n    os.path.join(BASE_DIR, 'staticfiles/'),\n)\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nJAZZMIN_SETTINGS = {\n    # title of the window (Will default to current_admin_site.site_title if absent or None)",
        "detail": "qr_generator.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "qr_generator.settings",
        "description": "qr_generator.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATICFILES_DIRS = (\n    os.path.join(BASE_DIR, 'staticfiles/'),\n)\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nJAZZMIN_SETTINGS = {\n    # title of the window (Will default to current_admin_site.site_title if absent or None)\n    \"site_title\": \"Missan\",",
        "detail": "qr_generator.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "qr_generator.settings",
        "description": "qr_generator.settings",
        "peekOfCode": "STATICFILES_DIRS = (\n    os.path.join(BASE_DIR, 'staticfiles/'),\n)\nSTATIC_ROOT = os.path.join(BASE_DIR, 'static')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nJAZZMIN_SETTINGS = {\n    # title of the window (Will default to current_admin_site.site_title if absent or None)\n    \"site_title\": \"Missan\",\n    # Title on the login screen (19 chars max) (defaults to current_admin_site.site_header if absent or None)",
        "detail": "qr_generator.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "qr_generator.settings",
        "description": "qr_generator.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, 'static')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nJAZZMIN_SETTINGS = {\n    # title of the window (Will default to current_admin_site.site_title if absent or None)\n    \"site_title\": \"Missan\",\n    # Title on the login screen (19 chars max) (defaults to current_admin_site.site_header if absent or None)\n    \"site_header\": \"Missan\",\n    # Title on the brand (19 chars max) (defaults to current_admin_site.site_header if absent or None)\n    \"site_brand\": \"Missan\",",
        "detail": "qr_generator.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "qr_generator.settings",
        "description": "qr_generator.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nJAZZMIN_SETTINGS = {\n    # title of the window (Will default to current_admin_site.site_title if absent or None)\n    \"site_title\": \"Missan\",\n    # Title on the login screen (19 chars max) (defaults to current_admin_site.site_header if absent or None)\n    \"site_header\": \"Missan\",\n    # Title on the brand (19 chars max) (defaults to current_admin_site.site_header if absent or None)\n    \"site_brand\": \"Missan\",\n    # Logo to use for your site, must be present in static files, used for brand on top left",
        "detail": "qr_generator.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "qr_generator.settings",
        "description": "qr_generator.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, \"media\")\nJAZZMIN_SETTINGS = {\n    # title of the window (Will default to current_admin_site.site_title if absent or None)\n    \"site_title\": \"Missan\",\n    # Title on the login screen (19 chars max) (defaults to current_admin_site.site_header if absent or None)\n    \"site_header\": \"Missan\",\n    # Title on the brand (19 chars max) (defaults to current_admin_site.site_header if absent or None)\n    \"site_brand\": \"Missan\",\n    # Logo to use for your site, must be present in static files, used for brand on top left\n    \"site_logo\": \"missan_logo.png\",",
        "detail": "qr_generator.settings",
        "documentation": {}
    },
    {
        "label": "JAZZMIN_SETTINGS",
        "kind": 5,
        "importPath": "qr_generator.settings",
        "description": "qr_generator.settings",
        "peekOfCode": "JAZZMIN_SETTINGS = {\n    # title of the window (Will default to current_admin_site.site_title if absent or None)\n    \"site_title\": \"Missan\",\n    # Title on the login screen (19 chars max) (defaults to current_admin_site.site_header if absent or None)\n    \"site_header\": \"Missan\",\n    # Title on the brand (19 chars max) (defaults to current_admin_site.site_header if absent or None)\n    \"site_brand\": \"Missan\",\n    # Logo to use for your site, must be present in static files, used for brand on top left\n    \"site_logo\": \"missan_logo.png\",\n    # Logo to use for your site, must be present in static files, used for login form logo (defaults to site_logo)",
        "detail": "qr_generator.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "qr_generator.urls",
        "description": "qr_generator.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    #apps\n    # path('')\n]\nurlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)",
        "detail": "qr_generator.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "qr_generator.wsgi",
        "description": "qr_generator.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "qr_generator.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'qr_generator.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]